{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "11600432622740004884"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('sqs{0}', substring(uniqueString(resourceGroup().id), 0, 8))]",
      "metadata": {
        "description": "Storage Account to use as persistence layer"
      }
    },
    "containerInstanceName": {
      "type": "string",
      "defaultValue": "sq-container",
      "metadata": {
        "description": "Container Instance to use as SonarQube host"
      }
    },
    "dnsName": {
      "type": "string",
      "defaultValue": "[format('sq{0}', substring(uniqueString(resourceGroup().id), 0, 8))]",
      "metadata": {
        "description": "DNS name for the SonarQube instance"
      }
    },
    "hostName": {
      "type": "string",
      "defaultValue": "[format('{0}.{1}.azurecontainer.io', parameters('dnsName'), parameters('location'))]",
      "metadata": {
        "description": "Host name for the service"
      }
    },
    "sqlServerName": {
      "type": "string",
      "defaultValue": "[format('sqsvr{0}', substring(uniqueString(resourceGroup().id), 0, 4))]",
      "metadata": {
        "description": "Azure SQL Server Name to use for SonarQube"
      }
    },
    "sqlDatabaseName": {
      "type": "string",
      "defaultValue": "sonarqube-db",
      "metadata": {
        "description": "Azure SQL Database to use for SonarQube"
      }
    },
    "sqlServerAdminLogin": {
      "type": "string",
      "defaultValue": "sonar",
      "metadata": {
        "description": "Database login for SonarQube"
      }
    },
    "sqlServerAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Database password for SonarQube"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/conf', parameters('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/data', parameters('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/extensions', parameters('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/logs', parameters('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/caddy-data', parameters('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2023-08-01-preview",
      "name": "[parameters('sqlServerName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2023-08-01-preview",
      "name": "[format('{0}/{1}', parameters('sqlServerName'), 'AzureServices')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2023-08-01-preview",
      "name": "[format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CS_AS",
        "maxSizeBytes": 2147483648
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2023-05-01",
      "name": "[parameters('containerInstanceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "containers": [
          {
            "name": "sonarqube-container",
            "properties": {
              "image": "sonarqube:latest",
              "environmentVariables": [
                {
                  "name": "SONAR_JDBC_PASSWORD",
                  "value": "[parameters('sqlServerAdminPassword')]"
                },
                {
                  "name": "SONAR_JDBC_URL",
                  "value": "[format('jdbc:sqlserver://{0}.database.windows.net:1433;database={1};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;', parameters('sqlServerName'), parameters('sqlDatabaseName'))]"
                },
                {
                  "name": "SONAR_JDBC_USERNAME",
                  "value": "[parameters('sqlServerAdminLogin')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "conf",
                  "mountPath": "/opt/sonarqube/conf"
                },
                {
                  "name": "data",
                  "mountPath": "/opt/sonarqube/data"
                },
                {
                  "name": "extensions",
                  "mountPath": "/opt/sonarqube/extensions"
                },
                {
                  "name": "logs",
                  "mountPath": "/opt/sonarqube/logs"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 2,
                  "memoryInGB": 8
                }
              },
              "ports": [
                {
                  "port": 9000,
                  "protocol": "TCP"
                }
              ]
            }
          },
          {
            "name": "caddy-container",
            "properties": {
              "image": "caddy:latest",
              "volumeMounts": [
                {
                  "name": "caddy-data",
                  "mountPath": "/data"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1
                }
              },
              "ports": [
                {
                  "port": 80,
                  "protocol": "TCP"
                },
                {
                  "port": 443,
                  "protocol": "TCP"
                }
              ],
              "command": [
                "caddy",
                "reverse-proxy",
                "--from",
                "[format('{0}', parameters('hostName'))]",
                "--to",
                "localhost:9000"
              ]
            }
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "dnsNameLabel": "[parameters('dnsName')]",
          "ports": [
            {
              "protocol": "TCP",
              "port": 443
            },
            {
              "port": 80,
              "protocol": "TCP"
            }
          ]
        },
        "restartPolicy": "OnFailure",
        "volumes": [
          {
            "name": "conf",
            "azureFile": {
              "shareName": "conf",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]",
              "readOnly": false
            }
          },
          {
            "name": "data",
            "azureFile": {
              "shareName": "data",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]",
              "readOnly": false
            }
          },
          {
            "name": "extensions",
            "azureFile": {
              "shareName": "extensions",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]",
              "readOnly": false
            }
          },
          {
            "name": "logs",
            "azureFile": {
              "shareName": "logs",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]",
              "readOnly": false
            }
          },
          {
            "name": "caddy-data",
            "azureFile": {
              "shareName": "caddy-data",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]",
              "readOnly": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ]
}